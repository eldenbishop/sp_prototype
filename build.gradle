buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

ext.versions = [
        kotlin: '1.3.11',
        gson: '2.8.5'
]

apply plugin: 'kotlin'
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    compile "com.google.code.gson:gson:${versions.gson}"
    compile "com.sparkjava:spark-kotlin:1.0.0-alpha"
    compile "org.apache.kafka:kafka-clients:2.2.0"
    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "com.j2html:j2html:1.2.0"
}

task start_monitor(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoMonitorKt"
    classpath = sourceSets.main.runtimeClasspath
}

task start_worker(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoSupervisor8080Kt"
    classpath = sourceSets.main.runtimeClasspath
}

task start_worker_8080(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoSupervisor8080Kt"
    classpath = sourceSets.main.runtimeClasspath
}

task start_worker_8081(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoSupervisor8081Kt"
    classpath = sourceSets.main.runtimeClasspath
}

task start_worker_8082(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoSupervisor8082Kt"
    classpath = sourceSets.main.runtimeClasspath
}

task start_worker_8083(type:JavaExec) {
    main = "spike.salesforce.streaming.demo.DemoSupervisor8083Kt"
    classpath = sourceSets.main.runtimeClasspath
}
